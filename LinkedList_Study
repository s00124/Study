
public class P2 {
	public static void main(String [] args) {
		LinkedList L = new LinkedList();
		L.insertLastNode("빨강");
		L.insertLastNode("주황");
		L.insertLastNode("노랑");
		L.insertLastNode("초록");
		L.insertLastNode("파랑");
		L.insertLastNode("남색");
		L.insertLastNode("보라");

		L.printList();

		L.reverseList();
		L.deleteLastNode();
		L.deleteLastNode();
		L.insertMiddleNode(L, L.searchNode("노랑"), "주황");
		L.reverseList();
		L.changeList("파랑", "남색");
		L.insertLastNode("빨강");
		L.printList();
	}
}

class ListNode {

	private String data;
	ListNode link;

	public ListNode(){
		this.data = null;
		this.link = null;
	}
	public ListNode(String data){
		this.data = data;
		this.link = null;
	}
	public ListNode(String data, ListNode link){
		this.data = data;
		this.link = link;
	}
	public String getData(){
		return  this.data;
	}
	public void setData(String data) {
		this.data = data;
	}
	public ListNode getLink(){
		return  this.link;
	}
	public void setLink(ListNode link){
		this.link = link;
	}
}

class LinkedList {
	private ListNode head;
	public LinkedList() {
		this.head = null;
	}
	public LinkedList(ListNode head) {
		this.head = head;
	}

	public void insertMiddleNode(LinkedList L, ListNode pre, String data) {
		ListNode newNode = new ListNode(data);
		if (L.head == null) {
			L.head = newNode;
			newNode.link = null;
		} else {
			newNode.link = pre.link;
			pre.link = newNode;
		}
	}

	public void insertLastNode(String data) {
		ListNode newNode = new ListNode(data);
		if(head == null) {
			this.head = newNode;
		} else {
			ListNode temp = head;
			while(temp.link != null) {
				temp = temp.link;
			}
			temp.link = newNode;
		}
	}

	public void deleteLastNode() {
		ListNode temp, pre;
		if(head == null) {
			return;
		} else {
			pre = head;
			temp = head.link;
			while(temp.link != null) {
				pre = temp;
				temp = temp.link;
			}
			pre.link = null;
		}
	}

	public ListNode searchNode(String data) {
		ListNode temp = this.head;
		while(temp != null) {
			temp = temp.link;
			if(data.equals(temp.getData())) {
				return temp;
			}
		}
		return temp;
	}

	public void reverseList() {
		ListNode next = head;
		ListNode current = null;
		ListNode pre = null;
		while(next != null) {
			pre = current;
			current = next;
			next = next.link;
			current.link = pre;
		}
		head = current;
	}

	public void changeList(String d1, String d2) {
		ListNode pre1 = head;
		ListNode pre2 = null;
		ListNode pre3 = null;
		ListNode temp1 = null;
		ListNode temp2 = null;

		while(true) {
			if(pre1.link.getData().equals(d1)) {
					temp1 = pre1.link;
					pre2 = pre1;
			} else if(pre1.link.getData().equals(d2)) {
					temp2 = pre1.link;
					pre3 = pre1;
			}
			if(temp1 != null && temp2 != null) break;
			pre1 = pre1.link; 
		}
		
		pre3.link = temp1;
		pre1 = temp1.link;
		
		if(temp2.link != null) {
			temp1.link = temp2.link;
		} else {
			temp1.link = null;
		}

		pre2.link = temp2;
		
		if(pre1 != null) {
			temp2.link = pre1;
		} else {
			temp2.link = null;
		}
		
	}

	public void printList() {
		ListNode temp = this.head;
		System.out.printf("L = (");
		while(temp != null) {
			System.out.printf(temp.getData());
			temp = temp.link;
			if(temp != null) {
				System.out.print(", ");
			}
		}
		System.out.println(")");

	}
}
